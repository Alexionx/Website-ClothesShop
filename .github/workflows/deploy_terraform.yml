on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Initialize Terraform
      run: terraform init
      working-directory: ./terraform  # вказали директорію, де знаходяться файли tf

    - name: Apply Terraform configuration
      id: apply_terraform # додаємо ID для доступу до output
      run: terraform apply -auto-approve
      working-directory: ./terraform  # вказали директорію, де знаходяться файли tf

    - name: Get EC2 public IP
      id: get_ip  # встановлюємо ID, щоб отримати публічний IP
      run: echo "EC2_PUBLIC_IP=$(terraform output -raw ec2_public_ip)" >> $GITHUB_ENV
      working-directory: ./terraform

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: Copy Nginx configuration
      run: |
        export EC2_PUBLIC_IP=${{ steps.get_ip.outputs.ec2_public_ip }}
        envsubst < nginx.conf.template > nginx.conf
        scp -o StrictHostKeyChecking=no -i /Users/sashamelnyk/Desktop/aws/devops-practice-test-key.pem nginx.conf ec2-user@$EC2_PUBLIC_IP:/etc/nginx/conf.d/website.conf
        ssh -o StrictHostKeyChecking=no ec2-user@$EC2_PUBLIC_IP 'sudo nginx -t && sudo systemctl restart nginx'

    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no ec2-user@${{  steps.get_ip.outputs.ec2_public_ip }} << 'EOF'
        cd /home/ec2-user/Website-ClothesShop
        git pull
        npm install

        sudo nginx -t

        sudo systemctl restart nginx

        pkill node
        nohup node app.js > output.log 2>&1 &
        EOF
