name: Deploy to EC2 with Docker

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code #  Завантажує код з GitHub репозиторію.
        uses: actions/checkout@v2

      - name: Configure AWS credentials # Конфігурація AWS для доступу до ресурсів (ECR, EC2)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install Terraform # Встановлює і ініціалізує Terraform для управління EC2 інстансом.
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform # Встановлює і ініціалізує Terraform для управління EC2 інстансом.
        run: terraform init
        working-directory: ./terraform  # вказали директорію, де знаходяться файли tf

      - name: Apply Terraform configuration # Створює або оновлює EC2 інстанс за допомогою Terraform.
        id: apply_terraform # додаємо ID для доступу до output
        run: terraform apply -auto-approve
        working-directory: ./terraform  # вказали директорію, де знаходяться файли tf

      - name: Get EC2 public IP
        id: get_ip  # Встановлюємо ID для отримання публічної IP
        run: | # отримуємо параметр ec2_public_ip
          EC2_PUBLIC_IP=$(aws ssm get-parameter --name "/my_app/ec2_public_ip" --query "Parameter.Value" --output text) 
          echo "EC2_PUBLIC_IP=${EC2_PUBLIC_IP}" >> $GITHUB_ENV
        working-directory: ./terraform 

      - name: Set up SSH # Встановлює SSH-з'єднання для доступу до інстансу.
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Copy Docker image to EC2 # Копіює Dockerfile на EC2
        run: |
          scp -o StrictHostKeyChecking=no -r ./Dockerfile ec2-user@${{ env.EC2_PUBLIC_IP }}:/home/ec2-user/
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }} # підключення через ssh для копіювання
  
      - name: Build and run Docker container on EC2 #Створює Docker-образ і запускає контейнер на EC2
        run: |
            ssh -o StrictHostKeyChecking=no ec2-user@${{ env.EC2_PUBLIC_IP }} << 'EOF'
          # перевіряється чи створено каталог і створюється чи потрібно
            mkdir -p /home/ec2-user/Website-ClothesShop
            cd /home/ec2-user/Website-ClothesShop || exit

            # Встановлюємо Git, якщо він ще не встановлений
            if ! command -v git &> /dev/null; then 
              sudo yum install git -y
            fi

            # Встановлюємо Docker, якщо він ще не встановлений
            if ! command -v docker &> /dev/null; then 
              sudo amazon-linux-extras install docker -y 
              sudo service docker start      
              sudo usermod -aG docker ec2-user  # Додати користувача до групи docker 
              newgrp docker  # Застосувати зміни групи
            fi

            # Оновлюємо код з репозиторію
            git pull

            # Створюємо Docker-образ
            docker build -t website-clothesshop-server .

            # Зупиняємо контейнер, якщо він запущений
            docker stop $(docker ps -q --filter ancestor=website-clothesshop-server) || true

            # Запускаємо новий контейнер
            docker run -d -p 3000:3000 website-clothesshop-server
          EOF


